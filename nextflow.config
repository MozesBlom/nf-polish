/*
 * -------------------------------------------------
 *  POLISH MY READS! - NF config file
 * -------------------------------------------------
 * Default config options
 *
 */

// Input and output parameters
params {

    reads = "/path/to/reads/*_R{1,2}_001.fastq.gz"
    outdir = "/path/to/results"

// Workflow params:

    // Use input file with explicit path names for forward and reverse read pairs? TSV file with the header: ID, R1, R2
    // Otherwise defaults on path listed above and the wildcard filenaming to identify read pairs
    specify_reads = false
    reads_tsv_fn =  "/path/to/reads/input.tsv"

    // Superdeduper
    // - Skip superdeduper [Boolean]
    skip_dedup = false

    // Adapter trimming
    // - Path to file with adapters for trimming. E.g. using the Trimmomatic adapter file:
    adapters = "/path/to/Trimmomatic-0.38/adapters/TruSeq3-PE-2.fa"

    // Merging
    // - Probability threshold for reads to be merged yes/no, see PEAR documentation 
    // - (Note; default is 0.01, but I noticed a relatively large proportion of false positives: 
    // - reads that were merged, but should not have been merged)
    pvalue = 0.0001
    // - Minimum overlap between pair to be considered for merging
    min_overlap = 20
    // - Minimum length of reads (or merged reads) to be retained
    min_read_len = 30

    // Quality trimming -- only defaults are used (except for min read len as specified above)

    // Superdeduper
    // - Skip remove low complexity reads [Boolean]
    skip_low_complex = false
    // - [min 0 - max 1] Max. relative frequency of A/T/C/G/N in a read to be considered low complexity.
    // - I.e. 0.5 means all reads that contain more than half A's are removed
    lc_cut_off_val = 0.5

    // Gather stats

}

profiles {

    standard {
       /*
        * Still needs to be further developed
        */
        process.executor = 'local'
    }

    mfn { includeConfig 'config/mfn.config' }

    rackham {
       /*
        * Still needs to be further developed
        */
        includeConfig 'config/rackham.config'
    }

    curta {
       /*
        * Still needs to be further developed
        */
        includeConfig 'config/curta.config'
    }

}
